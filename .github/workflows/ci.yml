name: CI # Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
jobs:
  ci:
    name: CI Pipeline
    runs-on: ubuntu-latest
    env:
      SQLX_VERSION: 0.6.2
      SQLX_FEATURES: "rustls, postgres"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # https://github.com/webfactory/ssh-agent#support-for-github-deploy-keys
      # - uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: |
      #       ${{ secrets.FIRST_KEY }}
      #       ${{ secrets.NEXT_KEY }}
      #       ${{ secrets.ANOTHER_KEY }}
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
      
      # Cache .cargo and target dirs
      - uses: Swatinem/rust-cache@v2

      - name: Rustup stable
        run: rustup default stable
      
      # Run Format and Docs checks (without SQLX)
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --all-features --workspace --examples

      # Run clippy
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --workspace -- -D warnings

      # Run test
      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --workspace
        env: 
          ENVIRONMENT: local

      # Run tests + coverage
      - name: Coverage
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast --workspace
          toolchain: nightly
        env:
          ENVIRONMENT: local
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'

      - uses: actions-rs/grcov@v0.1
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true
